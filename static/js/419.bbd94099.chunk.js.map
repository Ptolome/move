{"version":3,"file":"static/js/419.bbd94099.chunk.js","mappings":"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","sources":["pages/PageMove.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './PageMove.css'\r\nimport { useGetMoveQuery } from '../store/moveAPI';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst PageMove = () => {\r\n    const navigate=useNavigate()\r\n    const [userLocalData, setUserLocalData] = useState([])\r\n    const [isMovieAlreadyAdded,setIsMovieAlreadyAdded]=useState(false)\r\n    const id=useParams()\r\n    const {data,isLoading} = useGetMoveQuery(id)\r\n    const isAuth=useSelector(store=>store.toAuth.isAuth)\r\n    useEffect(() => {\r\n        const storedData = JSON.parse(window.localStorage.getItem('users'));\r\n        if (storedData) {\r\n          setUserLocalData(storedData);\r\n        }\r\n      }, []);\r\n    useEffect(() => {\r\n        if (data && userLocalData && userLocalData.favoriteMoves) {\r\n          const isMovieAlreadyAdded = userLocalData.favoriteMoves.some((movie) => movie.imdbID === data.imdbID);\r\n          setIsMovieAlreadyAdded(isMovieAlreadyAdded);\r\n        }\r\n      }, [data, userLocalData]);\r\n      \r\n      \r\n    \r\n    const handlelAddMoveToFavorite = () => {\r\n        if (!isAuth){\r\n            alert('Воидите в систему')\r\n            navigate('/login/in',{replace:true})\r\n        }\r\n        if (!userLocalData.favoriteMoves) {\r\n          userLocalData.favoriteMoves = [];\r\n        }\r\n        \r\n\r\n        if (!isMovieAlreadyAdded) {\r\n            userLocalData.favoriteMoves.push(data);\r\n            setUserLocalData({ ...userLocalData });\r\n            localStorage.setItem('users', JSON.stringify(userLocalData));\r\n            setIsMovieAlreadyAdded(true)\r\n        };\r\n      };\r\n    \r\n    const handleDeleteMoveFromFavorite = ()=>{\r\n        if (!isAuth){\r\n            alert('Воидите в систему')\r\n            navigate('/login/in',{replace:true})\r\n        }\r\n        if (isMovieAlreadyAdded) {\r\n            const filteredMoves = userLocalData.favoriteMoves.filter((movie)=>movie.imdbID !== data.imdbID)\r\n            userLocalData.favoriteMoves=filteredMoves\r\n            setUserLocalData({ ...userLocalData });\r\n            localStorage.setItem('users', JSON.stringify(userLocalData));\r\n            setIsMovieAlreadyAdded(false)\r\n\r\n        }\r\n    }\r\n    \r\n   \r\n   \r\n    return (isLoading ? <h2>isLoading</h2>:\r\n\r\n            <div className='container'>\r\n              <div className='full_move_cart'>\r\n                <div>\r\n                    <h2>name: {data.Title}</h2>\r\n                    <div>year: {data.Year}</div>\r\n\r\n                    <div>Released: {data.Released}</div>\r\n                    <div>Runtime: {data.Runtime}</div>\r\n                    <div> Genre: {data.Genre}</div>\r\n                    <div>:Director {data.Director}</div>\r\n                    <div>Writer: {data.Writer}</div>\r\n                    <div>Actors: {data.Actors}</div>\r\n                    <div>Plot: {data.Plot}</div>\r\n                    <div>Language: {data.Language}</div>\r\n                    <div>Country: {data.Country}</div>\r\n                    <div>Awards: {data.Awards}</div>\r\n                    <div>Ratings: {data.Ratings.map((item) => (<div key={item.Source+data.imdbID}>{item.Source}<span>_____{item.Value}</span></div>))}</div>\r\n                </div>\r\n             <div > <div><img src={data.Poster} alt=\"\" /></div>\r\n                    {isMovieAlreadyAdded && isAuth ? <button onClick={handleDeleteMoveFromFavorite}>убрать из избранных</button> :\r\n                    <button onClick={handlelAddMoveToFavorite}>Добавить в  избранные </button>}\r\n             </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageMove;\r\n"],"names":["PageMove","navigate","useNavigate","userLocalData","setUserLocalData","useState","isMovieAlreadyAdded","setIsMovieAlreadyAdded","id","useParams","data","isLoading","useGetMoveQuery","isAuth","useSelector","store","toAuth","useEffect","storedData","JSON","parse","window","localStorage","getItem","favoriteMoves","some","movie","imdbID","_jsx","children","className","_jsxs","Title","Year","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Ratings","map","item","Source","Value","src","Poster","alt","onClick","handleDeleteMoveFromFavorite","alert","replace","filteredMoves","filter","setItem","stringify","handlelAddMoveToFavorite","push"],"sourceRoot":""}